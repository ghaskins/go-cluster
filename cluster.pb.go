// Code generated by protoc-gen-go.
// source: cluster.proto
// DO NOT EDIT!

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	cluster.proto

It has these top-level messages:
	Negotiate
	Header
	Heartbeat
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Type int32

const (
	Type_HEARTBEAT Type = 1
)

var Type_name = map[int32]string{
	1: "HEARTBEAT",
}
var Type_value = map[string]int32{
	"HEARTBEAT": 1,
}

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}
func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}
func (x *Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Type_value, data, "Type")
	if err != nil {
		return err
	}
	*x = Type(value)
	return nil
}

type Heartbeat_Mode int32

const (
	Heartbeat_PING Heartbeat_Mode = 1
	Heartbeat_PONG Heartbeat_Mode = 2
)

var Heartbeat_Mode_name = map[int32]string{
	1: "PING",
	2: "PONG",
}
var Heartbeat_Mode_value = map[string]int32{
	"PING": 1,
	"PONG": 2,
}

func (x Heartbeat_Mode) Enum() *Heartbeat_Mode {
	p := new(Heartbeat_Mode)
	*p = x
	return p
}
func (x Heartbeat_Mode) String() string {
	return proto.EnumName(Heartbeat_Mode_name, int32(x))
}
func (x *Heartbeat_Mode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Heartbeat_Mode_value, data, "Heartbeat_Mode")
	if err != nil {
		return err
	}
	*x = Heartbeat_Mode(value)
	return nil
}

type Negotiate struct {
	Magic            *string  `protobuf:"bytes,1,req,name=magic" json:"magic,omitempty"`
	Version          *int32   `protobuf:"varint,2,req,name=version" json:"version,omitempty"`
	Options          []string `protobuf:"bytes,3,rep,name=options" json:"options,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Negotiate) Reset()         { *m = Negotiate{} }
func (m *Negotiate) String() string { return proto.CompactTextString(m) }
func (*Negotiate) ProtoMessage()    {}

func (m *Negotiate) GetMagic() string {
	if m != nil && m.Magic != nil {
		return *m.Magic
	}
	return ""
}

func (m *Negotiate) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *Negotiate) GetOptions() []string {
	if m != nil {
		return m.Options
	}
	return nil
}

type Header struct {
	Type             *Type  `protobuf:"varint,1,opt,name=type,enum=main.Type" json:"type,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}

func (m *Header) GetType() Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Type_HEARTBEAT
}

type Heartbeat struct {
	Mode             *Heartbeat_Mode `protobuf:"varint,1,opt,name=mode,enum=main.Heartbeat_Mode" json:"mode,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Heartbeat) Reset()         { *m = Heartbeat{} }
func (m *Heartbeat) String() string { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()    {}

func (m *Heartbeat) GetMode() Heartbeat_Mode {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return Heartbeat_PING
}

func init() {
	proto.RegisterEnum("main.Type", Type_name, Type_value)
	proto.RegisterEnum("main.Heartbeat_Mode", Heartbeat_Mode_name, Heartbeat_Mode_value)
}
